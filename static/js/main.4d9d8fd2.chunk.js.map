{"version":3,"sources":["encrypt.tsx","assets/robot-01-icon.png","App.tsx","Wrapper.tsx","index.tsx"],"names":["salt","App","props","code","match","params","myCipher","textToChars","text","split","map","c","charCodeAt","byteHex","n","Number","toString","substr","applySaltToChar","reduce","a","b","join","cipher","myDecipher","encoded","hex","parseInt","charCode","String","fromCharCode","decipher","synth","window","speechSynthesis","useState","substring","voice","setVoice","undefined","slice","setText","Array","voices","setVoices","useEffect","getVoices","speakFunction","setTimeout","i","length","lang","includes","speaking","console","error","speakText","SpeechSynthesisUtterance","onerror","e","speak","className","src","img","style","maxHeight","color","type","name","value","onChange","event","target","placeholder","v","marginTop","onClick","navigator","clipboard","writeText","encodeVoice","alert","padding","borderRadius","fontSize","Wrapper","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d9d8fd2.chunk.js","sourcesContent":["export const salt: string = \"salt\";\r\n\r\nexport const cipher = (salt: string) => {\r\n\tconst textToChars = (text: string) =>\r\n\t\ttext.split(\"\").map((c) => c.charCodeAt(0));\r\n\tconst byteHex = (n: any) => (\"0\" + Number(n).toString(16)).substr(-2);\r\n\tconst applySaltToChar = (code: number) =>\r\n\t\ttextToChars(salt).reduce((a, b) => a ^ b, code);\r\n\r\n\treturn (text: any) =>\r\n\t\ttext.split(\"\").map(textToChars).map(applySaltToChar).map(byteHex).join(\"\");\r\n};\r\n\r\nexport const decipher = (salt: string) => {\r\n\tconst textToChars = (text: string) =>\r\n\t\ttext.split(\"\").map((c) => c.charCodeAt(0));\r\n\tconst applySaltToChar = (code: number) =>\r\n\t\ttextToChars(salt).reduce((a, b) => a ^ b, code);\r\n\treturn (encoded: any) =>\r\n\t\tencoded\r\n\t\t\t.match(/.{1,2}/g)\r\n\t\t\t.map((hex: string) => parseInt(hex, 16))\r\n\t\t\t.map(applySaltToChar)\r\n\t\t\t.map((charCode: any) => String.fromCharCode(charCode))\r\n\t\t\t.join(\"\");\r\n};\r\n\r\nexport const encodeVoice = (v: number) => String.fromCharCode(v + 96);\r\n\r\nexport const decodeVoice = (v: string) => v.charCodeAt(0) - 96;\r\n","export default __webpack_public_path__ + \"static/media/robot-01-icon.cb06a77d.png\";","import React, { useEffect, useState } from \"react\";\nimport { cipher, decipher, salt, encodeVoice, decodeVoice } from \"./encrypt\";\nimport img from \"./assets/robot-01-icon.png\";\n\nexport const App = (props: any) => {\n\tconst { code } = props.match.params;\n\tconst myCipher = cipher(salt);\n\tconst myDecipher = decipher(salt);\n\tconst url = \"https://nikhilshankar96.github.io/nolexa/\";\n\n\tconst synth = window.speechSynthesis;\n\tconst [voice, setVoice] = useState(\n\t\t!!code ? decodeVoice(code.substring(0, 1)) : 13\n\t);\n\tconst [text, setText] = useState(\n\t\tcode === undefined ? \"\" : myDecipher(code.slice(1))\n\t);\n\tconst [voices, setVoices] = useState(Array<SpeechSynthesisVoice>());\n\n\tuseEffect(() => {\n\t\tgetVoices();\n\t\tif (!!code && code !== \"\") {\n\t\t\tspeakFunction();\n\t\t\tsetTimeout(() => speakFunction(), 666);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfor (let i: number = 0; i < voices.length; i++) {\n\t\t\t//console.log(\"Setting default voice\");\n\t\t\tif (voices[i].lang.includes(\"ja-JP\")) {\n\t\t\t\t//console.log(i);\n\t\t\t\tsetVoice(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!synth.speaking) speakFunction();\n\t}, [voices]);\n\n\tconst getVoices = async () => setVoices(await synth.getVoices());\n\n\tconst speakFunction = () => {\n\t\t//console.log(voice);\n\t\tif (text === \"\") return;\n\t\t//check if speaking\n\t\tif (synth.speaking) {\n\t\t\tconsole.error(\"Already speaking, wait!\");\n\t\t\treturn;\n\t\t}\n\t\tlet speakText = new SpeechSynthesisUtterance(text);\n\t\t//speak error\n\t\tspeakText.onerror = (e) => {\n\t\t\tconsole.error(\"something went wrong\");\n\t\t};\n\n\t\t//loop through voices to find selectedVoice\n\t\tspeakText.voice = voices[voice];\n\n\t\t//speak\n\t\tsynth.speak(speakText);\n\t};\n\n\tconst copyCode = () => {\n\t\tnavigator.clipboard.writeText(url + encodeVoice(voice) + myCipher(text));\n\t\talert(\"Copied to clipboard, send it to someone!\");\n\t};\n\n\treturn (\n\t\t<div className='container row'>\n\t\t\t<h1 className=' center\t'>Nolexa</h1>\n\t\t\t<div className='center'>\n\t\t\t\t<img className='responsive-img' src={img} style={{ maxHeight: 400 }} />\n\t\t\t</div>\n\t\t\t<div className='col s12'>\n\t\t\t\t<input\n\t\t\t\t\tstyle={{ color: \"white\" }}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='text'\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChange={(event) => setText(event.target.value)}\n\t\t\t\t\tplaceholder={\"Type something\"}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='col s12'>\n\t\t\t\t<select\n\t\t\t\t\tvalue={voice}\n\t\t\t\t\tonChange={(event) => setVoice(Number(event.target.value))}\n\t\t\t\t\tclassName='browser-default'\n\t\t\t\t>\n\t\t\t\t\t{voices.length > 0 &&\n\t\t\t\t\t\tvoices.map(function (v, i) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<option key={i} value={i}>\n\t\t\t\t\t\t\t\t\t{v.name} ({v.lang})\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<div className='row container col s12 center' style={{ marginTop: 20 }}>\n\t\t\t\t<div className='col s6  center'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='waves-effect waves-light btn-large cyan'\n\t\t\t\t\t\tonClick={speakFunction}\n\t\t\t\t\t>\n\t\t\t\t\t\tSpeak\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='col s6  center '>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='waves-effect waves-light btn-large purple'\n\t\t\t\t\t\tonClick={copyCode}\n\t\t\t\t\t>\n\t\t\t\t\t\tShare\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='col s12 responsive-text '>\n\t\t\t\t<p\n\t\t\t\t\tclassName='red  center'\n\t\t\t\t\tstyle={{ padding: 10, borderRadius: 8, fontSize: 9 }}\n\t\t\t\t>\n\t\t\t\t\tNolexa is merely a dumb app built on a boring sunday afternoon, I take\n\t\t\t\t\tno responsibility for whatever whoever sent you. Doesn't work on some\n\t\t\t\t\tbrowsers.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\ninterface Props {}\r\n\r\nconst Wrapper = (props: Props) => {\r\n\treturn (\r\n\t\t<div className='root'>\r\n\t\t\t<Router>\r\n\t\t\t\t<Route path='/' exact component={App} {...props} />\r\n\t\t\t\t<Route path='/:code' component={App} {...props} />\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Wrapper from \"./Wrapper\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Wrapper />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}